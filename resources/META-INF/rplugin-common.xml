<idea-plugin allow-bundled-update="true">
    <!-- ensure compatibility with all intellij products-->
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.xdebugger</depends>
    <depends>org.intellij.plugins.markdown</depends>

    <description><![CDATA[
<html>
<body>
<p><span></span></p>
<p><span>With the plugin for the </span>
<span><a href="https://www.r-project.org/">R language</a></span><span>,</span><span
   >&nbsp;you can perform various statistical computing and enjoy your favorite features of the integrated development environment:</span>
</p>
<ul>
  <li><span>Coding assistance:</span>
    <ul>
      <li><span>Error and syntax</span><span>&nbsp;highlighting</span><span>.</span></li>
      <li><span>Code completion</span><span>.</span></li>
      <li><span>Intention actions and quick fixes.</span></li>
    </ul>
   </li>
</ul>
<ul>
  <li><span>Smart editing and auto-saving changes in your R files. Supported formats:</span>
    <ul>
      <li><span>R Script</span></li>
      <li><span>R Markdown</span></li>
    </ul>
  </li>
</ul>
<ul>
  <li><span>Previewing data in the graphic and tabular forms:</span>
    <ul>
      <li><span>R Graphics viewer</span></li>
      <li><span>Table View</span></li>
      <li><span>R HTML viewer</span></li>
      <li><span>R Markdown preview</span></li>
    </ul>
   </li>
</ul>
<ul>
  <li><span>Running and debugging R scripts with the live variables view.</span></li>
  <li><span>Managing R packages; ability to create your own R packages.</span></li>
</ul>
<p><span>Find a bug? Please, file an issue <a href="https://youtrack.jetbrains.com/issues/R">here</a></span>.</p>
<p><span>For more details, see </span><span><a href="https://www.jetbrains.com/help/pycharm/2019.3/r-plugin-support.html">PyCharm web help</a></span><span>.</span></p>
<br>
<p>
This plugin comes with ABSOLUTELY NO WARRANTY.</p>
<p>
This is free software, and you are welcome to redistribute it under certain conditions.
</p>
<br>
<p>
Please note the plugin distribution contains Rkernel program covered by
<a href="https://www.gnu.org/licenses/gpl-3.0.en.html">GPL-3</a>/<a href="https://www.gnu.org/licenses/agpl-3.0.en.html">AGPL-3</a> licenses.
</p>
<br>
<p>
You can find the source code in the following repositories:
<ul>
    <li><a href="https://github.com/JetBrains/Rplugin">Rplugin</a></li>
    <li><a href="https://github.com/JetBrains/Rkernel-proto">Rkernel-proto</a></li>
    <li><a href="https://github.com/JetBrains/Rkernel">Rkernel</a></li>
</ul>
</p>
</body>

</html>

        ]]></description>

    <extensionPoints>
      <extensionPoint qualifiedName="com.intellij.rmdFenceProvider"
                      interface="org.jetbrains.r.rmarkdown.RmdFenceProvider" dynamic="true"/>

      <extensionPoint qualifiedName="com.intellij.rInterpreterSettingsProvider"
                      interface="org.jetbrains.r.settings.RInterpreterSettingsProvider" dynamic="true"/>

      <extensionPoint qualifiedName="com.intellij.rS4ContextProvider"
                      interface="org.jetbrains.r.classes.s4.context.RS4ContextProvider" dynamic="true"/>
    </extensionPoints>

    <resource-bundle>messages.RPluginBundle</resource-bundle>

    <actions>
        <action id="org.jetbrains.r.console.RConsoleAction"
                class="org.jetbrains.r.console.RConsoleAction">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </action>

        <action id="org.jetbrains.r.console.RConsoleView.RInterruptAction"
                class="org.jetbrains.r.console.RConsoleView$RInterruptAction"
                icon="AllIcons.Actions.Suspend">
          <keyboard-shortcut keymap="$default" first-keystroke="control C"/>
          <keyboard-shortcut keymap="Mac OS X" first-keystroke="control C" replace-all="true"/>
          <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="control C" replace-all="true"/>
        </action>

        <action id="org.jetbrains.r.console.RConsoleView.RestartRAction"
                class="org.jetbrains.r.console.RConsoleView$RestartRAction"
                icon="AllIcons.Actions.Restart"/>

        <action id="org.jetbrains.r.console.RConsoleView.TerminateRWithReportAction"
                class="org.jetbrains.r.console.RConsoleView$TerminateRWithReportAction"
                icon="AllIcons.Debugger.KillProcess"/>

        <action id="org.jetbrains.r.console.RConsoleView.REofAction"
                class="org.jetbrains.r.console.RConsoleView$REofAction">
          <keyboard-shortcut keymap="$default" first-keystroke="control D"/>
          <keyboard-shortcut keymap="Mac OS X" first-keystroke="control D" replace-all="true"/>
          <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="control D" replace-all="true"/>
        </action>

        <action id="org.jetbrains.r.console.RConsoleView.RSetCurrentDirectoryFromEditor"
                class="org.jetbrains.r.console.RConsoleView$RSetCurrentDirectoryFromEditor"
                icon="/icons/changeWorkingDirectory.svg"/>

        <action id="RConsoleRenameAction" class="org.jetbrains.r.console.RConsoleRenameAction">
          <add-to-group group-id="ToolWindowContextMenu" anchor="last"/>
        </action>

        <action id="NewRScriptAction" class="org.jetbrains.r.actions.NewRScriptAction">
            <add-to-group group-id="NewGroup" relative-to-action="NewFromTemplate" anchor="before"/>
        </action>

        <action id="NewRMarkdownAction" class="org.jetbrains.r.actions.NewRMarkdownAction">
            <add-to-group group-id="NewGroup" relative-to-action="NewFromTemplate" anchor="before"/>
        </action>

        <group id="org.jetbrains.r.run.visualize.actions.RImportDataContextActionGroup"
               class="org.jetbrains.r.run.visualize.actions.RImportDataContextActionGroup" popup="true">
            <add-to-group group-id="ProjectViewPopupMenu" relative-to-action="SynchronizeCurrentFile" anchor="after"/>
        </group>

        <action id="VisualizeTableAction" class="org.jetbrains.r.run.visualize.VisualizeTableAction"/>
        <action id="org.jetbrains.r.actions.DumpRInteropMessages" class="org.jetbrains.r.actions.DumpRInteropMessages"/>

        <action id="org.jetbrains.r.console.jobs.RunRJobAction" class="org.jetbrains.r.console.jobs.RunRJobAction"
                icon="/icons/run/runJob.svg"/>
    </actions>

    <actions>
      <action id="org.jetbrains.r.actions.REditorHelpAction" class="org.jetbrains.r.actions.REditorHelpAction"
              icon="AllIcons.Actions.Help" >
        <keyboard-shortcut keymap="$default" first-keystroke="F1" replace-all="true"/>
        <keyboard-shortcut keymap="Mac OS X" first-keystroke="F1" replace-all="true"/>
        <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="F1" replace-all="true"/>
      </action>
      <action id="RInsertAssignmentAction" class="org.jetbrains.r.editor.RInsertAssignmentAction">
        <keyboard-shortcut keymap="$default" first-keystroke="alt MINUS"/>
        <keyboard-shortcut keymap="Mac OS X" first-keystroke="alt MINUS" replace-all="true"/>
        <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="alt MINUS" replace-all="true"/>
      </action>
      <action id="RInsertPipeAction" class="org.jetbrains.r.editor.RInsertPipeAction">
        <keyboard-shortcut keymap="$default" first-keystroke="control shift M" replace-all="true"/>
        <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta shift M" replace-all="true"/>
        <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta shift M" replace-all="true"/>
      </action>
        <action id="org.jetbrains.r.actions.RRunAction" class="org.jetbrains.r.actions.RRunAction"
                icon="AllIcons.Actions.Execute" >
          <keyboard-shortcut keymap="$default" first-keystroke="control shift ENTER"/>
          <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta shift ENTER" replace-all="true"/>
          <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta shift ENTER" replace-all="true"/>
            <add-to-group group-id="EditorPopupMenu"/>
        </action>
        <action id="org.jetbrains.r.actions.RDebugAction" class="org.jetbrains.r.actions.RDebugAction"
                icon="AllIcons.Actions.StartDebugger">
          <keyboard-shortcut keymap="$default" first-keystroke="control alt shift ENTER"/>
          <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta alt shift ENTER" replace-all="true"/>
          <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta alt shift ENTER" replace-all="true"/>
            <add-to-group group-id="EditorPopupMenu"/>
        </action>
        <action id="org.jetbrains.r.actions.RunSelection"
                class="org.jetbrains.r.actions.RunSelection"
                icon="/icons/run/runCurrent.svg">
            <keyboard-shortcut keymap="$default" first-keystroke="control ENTER"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta ENTER" replace-all="true"/>
            <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta ENTER" replace-all="true"/>
            <add-to-group group-id="EditorPopupMenu"/>
        </action>
        <action id="org.jetbrains.r.actions.DebugSelection"
                class="org.jetbrains.r.actions.DebugSelection"
                icon="/icons/run/debugCurrent.svg">
          <keyboard-shortcut keymap="$default" first-keystroke="control alt ENTER"/>
          <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta alt ENTER" replace-all="true"/>
          <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta alt ENTER" replace-all="true"/>
            <add-to-group group-id="EditorPopupMenu"/>
        </action>
        <action id="RConsoleNextLineAction" class="org.jetbrains.r.console.RConsoleNextLineAction">
          <keyboard-shortcut keymap="$default" first-keystroke="shift ENTER"/>
          <keyboard-shortcut keymap="Mac OS X" first-keystroke="shift ENTER" replace-all="true"/>
          <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="shift ENTER" replace-all="true"/>
        </action>
        <action id="org.jetbrains.r.actions.RMarkdownInterruptAction"
                class="org.jetbrains.r.actions.RMarkdownInterruptAction"
                icon="AllIcons.Actions.Suspend">
          <keyboard-shortcut keymap="$default" first-keystroke="control alt D"/>
          <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta alt D" replace-all="true"/>
          <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta alt D" replace-all="true"/>
        </action>
        <action id="RConsole.History.Older" class="com.intellij.openapi.actionSystem.EmptyAction"/>
    </actions>

<!-- chunk anctions-->
    <actions>
        <group id="org.jetbrains.r.rendering.chunk.RunChunkActions">
            <action id="org.jetbrains.r.rendering.chunk.RunChunkAction"
                    class="org.jetbrains.r.rendering.chunk.RunChunkAction"
                    icon="AllIcons.Actions.Execute">
                <keyboard-shortcut keymap="$default" first-keystroke="control alt C"/>
                <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta alt C" replace-all="true"/>
                <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta alt C" replace-all="true"/>
            </action>
            <action id="org.jetbrains.r.rendering.chunk.DebugChunkAction"
                    class="org.jetbrains.r.rendering.chunk.DebugChunkAction"
                    icon="AllIcons.Actions.StartDebugger">
                <keyboard-shortcut keymap="$default" first-keystroke="control alt X"/>
                <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta alt X" replace-all="true"/>
                <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta alt X" replace-all="true"/>
            </action>
            <action id="org.jetbrains.r.rendering.chunk.RunChunksAboveAction"
                    class="org.jetbrains.r.rendering.chunk.RunChunksAboveAction"
                    icon="/icons/run/runAbove.svg">
                <keyboard-shortcut keymap="$default" first-keystroke="control alt B"/>
                <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta alt B" replace-all="true"/>
                <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta alt B" replace-all="true"/>
            </action>
            <action id="org.jetbrains.r.rendering.chunk.RunChunksBelowAction"
                    class="org.jetbrains.r.rendering.chunk.RunChunksBelowAction"
                    icon="/icons/run/runBelow.svg"/>
            <action id="RMarkdownNewChunk" class="org.jetbrains.r.rmarkdown.RMarkdownNewChunk"
                    icon="AllIcons.General.Add">
                <keyboard-shortcut keymap="$default" first-keystroke="control alt I"/>
                <keyboard-shortcut keymap="Mac OS X" first-keystroke="meta alt I" replace-all="true"/>
                <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="meta alt I" replace-all="true"/>
            </action>
        </group>
    </actions>

    <!-- Chunk output actions -->
    <actions>
        <group id="org.jetbrains.r.rendering.chunk.ChunkOutputToolbarActions">
            <action id="org.jetbrains.r.rendering.chunk.ExportImageAction"
                    class="org.jetbrains.r.rendering.chunk.ExportImageAction"
                    icon="AllIcons.ToolbarDecorator.Export"/>
            <action id="org.jetbrains.r.rendering.chunk.ZoomImageAction"
                    class="org.jetbrains.r.rendering.chunk.ZoomImageAction"
                    icon="AllIcons.Actions.Preview"/>
            <action id="org.jetbrains.r.rendering.chunk.ImageSettingsAction"
                    class="org.jetbrains.r.rendering.chunk.ImageSettingsAction"
                    icon="AllIcons.General.GearPlain"/>
        </group>
    </actions>

    <!-- Variable view actions -->
    <actions>
        <group id="org.jetbrains.r.debugger.RXVariablesViewActions">
            <action id="org.jetbrains.r.debugger.RImportBaseDataAction"
                    class="org.jetbrains.r.debugger.RImportBaseDataAction"/>
            <action id="org.jetbrains.r.debugger.RImportCsvDataAction"
                    class="org.jetbrains.r.debugger.RImportCsvDataAction"/>
            <action id="org.jetbrains.r.debugger.RImportExcelDataAction"
                    class="org.jetbrains.r.debugger.RImportExcelDataAction"/>
        </group>
    </actions>

    <!-- Graphics panel actions -->
    <actions>
        <group id="org.jetbrains.r.run.graphics.ui.RGraphicsToolbarActions">
            <action id="org.jetbrains.r.run.graphics.ui.RPreviousGraphicsAction"
                    class="org.jetbrains.r.run.graphics.ui.RPreviousGraphicsAction"
                    icon="AllIcons.Actions.Back"/>
            <action id="org.jetbrains.r.run.graphics.ui.RNextGraphicsAction"
                    class="org.jetbrains.r.run.graphics.ui.RNextGraphicsAction"
                    icon="AllIcons.Actions.Forward"/>
            <action id="org.jetbrains.r.run.graphics.ui.RExportGraphicsAction"
                    class="org.jetbrains.r.run.graphics.ui.RExportGraphicsAction"
                    icon="AllIcons.ToolbarDecorator.Export"/>
            <action id="org.jetbrains.r.run.graphics.ui.RCopyGraphicsAction"
                    class="org.jetbrains.r.run.graphics.ui.RCopyGraphicsAction"
                    icon="AllIcons.Actions.Copy"/>
            <action id="org.jetbrains.r.run.graphics.ui.RZoomGraphicsAction"
                    class="org.jetbrains.r.run.graphics.ui.RZoomGraphicsAction"
                    icon="AllIcons.Actions.Preview"/>
            <action id="org.jetbrains.r.run.graphics.ui.RClearGraphicsAction"
                    class="org.jetbrains.r.run.graphics.ui.RClearGraphicsAction"
                    icon="AllIcons.Actions.GC"/>
            <action id="org.jetbrains.r.run.graphics.ui.RClearAllGraphicsAction"
                    class="org.jetbrains.r.run.graphics.ui.RClearAllGraphicsAction"
                    icon="AllIcons.Actions.Cancel"/>
            <action id="org.jetbrains.r.run.graphics.ui.RTuneGraphicsDeviceAction"
                    class="org.jetbrains.r.run.graphics.ui.RTuneGraphicsDeviceAction"
                    icon="AllIcons.General.GearPlain"/>
        </group>
    </actions>

    <!-- Installed packages panel actions -->
    <actions>
        <group id="org.jetbrains.r.packages.remote.ui.RInstalledPackagesPanelActions">
            <action id="org.jetbrains.r.packages.remote.ui.RInstallAction"
                    class="org.jetbrains.r.packages.remote.ui.RInstallAction"
                    icon="AllIcons.General.Add"/>
            <action id="org.jetbrains.r.packages.remote.ui.RUpgradeAction"
                    class="org.jetbrains.r.packages.remote.ui.RUpgradeAction"
                    icon="AllIcons.Actions.MoveUp"/>
            <action id="org.jetbrains.r.packages.remote.ui.RUpgradeAllAction"
                    class="org.jetbrains.r.packages.remote.ui.RUpgradeAllAction"/>
            <action id="org.jetbrains.r.packages.remote.ui.RRefreshAction"
                    class="org.jetbrains.r.packages.remote.ui.RRefreshAction"
                    icon="AllIcons.Actions.Refresh"/>
            <action id="org.jetbrains.r.packages.remote.ui.RLoadUnloadAction"
                    class="org.jetbrains.r.packages.remote.ui.RLoadUnloadAction"/>
            <action id="org.jetbrains.r.packages.remote.ui.RNavigateToDocumentationAction"
                    class="org.jetbrains.r.packages.remote.ui.RNavigateToDocumentationAction"/>
            <action id="org.jetbrains.r.packages.remote.ui.ROpenLinkAction"
                    class="org.jetbrains.r.packages.remote.ui.ROpenLinkAction"/>
            <action id="org.jetbrains.r.packages.remote.ui.RUninstallAction"
                    class="org.jetbrains.r.packages.remote.ui.RUninstallAction"/>
            <action id="org.jetbrains.r.packages.remote.ui.RInstallPackageAction"
                    class="org.jetbrains.r.packages.remote.ui.RInstallPackageAction"/>
            <action id="org.jetbrains.r.packages.remote.ui.RUpdatePackageAction"
                    class="org.jetbrains.r.packages.remote.ui.RUpdatePackageAction"/>
        </group>
    </actions>

    <!-- Build package panel actions -->
    <actions>
        <group id="org.jetbrains.r.packages.build.ui.RPackageBuildToolbarActions">
            <action id="org.jetbrains.r.packages.build.ui.RInstallPackageAction"
                    class="org.jetbrains.r.packages.build.ui.RInstallPackageAction"
                    icon="AllIcons.Toolwindows.ToolWindowBuild"/>
            <action id="org.jetbrains.r.packages.build.ui.RCheckPackageAction"
                    class="org.jetbrains.r.packages.build.ui.RCheckPackageAction"
                    icon="AllIcons.General.InspectionsOK"/>
            <action id="org.jetbrains.r.packages.build.ui.RTestPackageAction"
                    class="org.jetbrains.r.packages.build.ui.RTestPackageAction"
                    icon="AllIcons.RunConfigurations.TestState.Run"/>
            <action id="org.jetbrains.r.packages.build.ui.RSetupTestsAction"
                    class="org.jetbrains.r.packages.build.ui.RSetupTestsAction"
                    icon="AllIcons.Actions.NewFolder"/>
            <action id="org.jetbrains.r.packages.build.ui.RPackageBuildSettingsAction"
                    class="org.jetbrains.r.packages.build.ui.RPackageBuildSettingsAction"
                    icon="AllIcons.General.GearPlain"/>
        </group>
    </actions>

    <!-- Project view actions -->
    <actions>
      <action
        id="org.jetbrains.r.actions.CreateRTestFileAction"
        class="org.jetbrains.r.actions.CreateRTestFileAction"
        icon="AllIcons.Nodes.Test">
        <add-to-group group-id="ProjectViewPopupMenu" relative-to-action="SynchronizeCurrentFile" anchor="after"/>
      </action>
    </actions>

    <extensions defaultExtensionNs="org.jetbrains.plugins.notebooks">
        <notebookCellLinesProvider language="RMarkdown"
                                   implementationClass="org.jetbrains.r.editor.RMarkdownCellLinesProvider"/>
        <editor.notebookEditorAppearanceProvider implementation="org.jetbrains.r.editor.RMarkdownNotebookEditorAppearanceProvider"/>
        <notebookCellInlayController implementation="org.jetbrains.r.editor.ui.RMarkdownCellToolbarController$Factory"/>
        <notebookCellInlayController implementation="org.jetbrains.r.editor.ui.RMarkdownOutputInlayController$Factory"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <additionalTextAttributes scheme="Default" file="colorSchemes/RMarkdownChunkDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/RMarkdownChunkDarcula.xml"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/RLanguageDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/RLanguageDarcula.xml"/>

        <statistics.counterUsagesCollector groupId="r.interpreters" version="1"/>
        <statistics.counterUsagesCollector groupId="r.workflow" version="1"/>

        <indexedRootsProvider implementation="org.jetbrains.r.settings.RIndexableSetContributor"/>
        <fileType name="R" implementationClass="org.jetbrains.r.RFileType" fieldName="INSTANCE" language="R" extensions="R;Rprofile"/>
        <fileType name="RMarkdown" implementationClass="org.jetbrains.r.rmarkdown.RMarkdownFileType" fieldName="INSTANCE"
                  language="RMarkdown" extensions="Rmd"/>
        <fileType name="Roxygen" implementationClass="org.jetbrains.r.roxygen.RoxygenFileType" fieldName="INSTANCE" language="Roxygen"/>

        <lang.fileViewProviderFactory language="RMarkdown"
                                      implementationClass="org.jetbrains.r.rmarkdown.RMarkdownFileViewProviderFactory"/>

        <lang.syntaxHighlighterFactory language="R"
                                       implementationClass="org.jetbrains.r.highlighting.RSyntaxHighlighterFactory"/>
        <highlightVisitor implementation="org.jetbrains.r.highlighting.RRainbowVisitor"/>
        <lang.syntaxHighlighter language="Roxygen" implementationClass="org.jetbrains.r.roxygen.RoxygenSyntaxHighlighter"/>

        <actionPromoter implementation="org.jetbrains.r.actions.RActionPromoter"/>

        <statusBarWidgetFactory id="rInterpreterWidget"
                                implementation="org.jetbrains.r.configuration.RInterpreterBarWidgetFactory"
                                order="after codeStyleWidget, before pythonInterpreterWidget, before gitWidget, before hgWidget, before notificationsWidget"/>

        <!-- Code style and formatting -->
        <codeStyleSettingsProvider implementation="org.jetbrains.r.editor.formatting.RCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="org.jetbrains.r.editor.formatting.RLanguageCodeStyleSettingsProvider"/>
        <colorSettingsPage implementation="org.jetbrains.r.highlighting.RColorSettingsPage"/>
        <colorSettingsPage implementation="org.jetbrains.r.highlighting.RMarkdownColorSettingsPage"/>
        <lang.formatter language="R" implementationClass="org.jetbrains.r.editor.formatting.RFormattingModelBuilder"/>
        <lang.braceMatcher language="R" implementationClass="org.jetbrains.r.editor.RBraceMatcher"/>
        <lang.braceMatcher language="Roxygen" implementationClass="org.jetbrains.r.roxygen.RoxygenBraceMatcher"/>
        <quoteHandler className="org.jetbrains.r.editor.RQuoteHandler" fileType="R"/>

        <lang.foldingBuilder language="R" implementationClass="org.jetbrains.r.editor.RFoldingBuilder"/>
        <annotator language="R" implementationClass="org.jetbrains.r.annotator.RAnnotator"/>
        <annotator language="Roxygen" implementationClass="org.jetbrains.r.roxygen.annotator.RoxygenAnnotator"/>
        <lang.namesValidator language="R" implementationClass="org.jetbrains.r.refactoring.RNamesValidator"/>

        <!-- Codeinsight -->

        <lang.ast.factory language="R" implementationClass="org.jetbrains.r.parsing.RAstFactory"/>
        <lang.ast.factory language="Roxygen" implementationClass="org.jetbrains.r.roxygen.parsing.RoxygenAstFactory"/>

        <lang.parserDefinition language="R" implementationClass="org.jetbrains.r.parsing.RParserDefinition"/>
        <lang.parserDefinition language="RMarkdown" implementationClass="org.jetbrains.r.rmarkdown.RMarkdownParserDefinition"/>
        <lang.parserDefinition language="Roxygen" implementationClass="org.jetbrains.r.roxygen.parsing.RoxygenParserDefinition"/>

        <languageInjector implementation="org.jetbrains.r.roxygen.RoxygenLanguageInjector"/>

        <lang.formatter language="RMarkdown" implementationClass="org.jetbrains.r.editor.formatting.RMarkdownFormattingModelBuilder"/>

        <rmdFenceProvider implementation="org.jetbrains.r.rmarkdown.RmdFenceProviderForR"/>

       <lang.tokenSeparatorGenerator language="R" implementationClass="org.jetbrains.r.RTokenSeparatorGenerator"/>

        <fileEditorProvider implementation="org.jetbrains.r.rendering.editor.RFileEditorProvider"/>
        <fileEditorProvider implementation="org.jetbrains.r.run.visualize.RTableEditorProvider"/>

        <stubIndex implementation="org.jetbrains.r.psi.stubs.RAssignmentNameIndex"/>
        <stubIndex implementation="org.jetbrains.r.psi.stubs.RAssignmentCompletionIndex"/>
        <stubIndex implementation="org.jetbrains.r.psi.stubs.RInternalAssignmentCompletionIndex"/>
        <stubIndex implementation="org.jetbrains.r.psi.stubs.RS4ClassNameIndex"/>
        <stubElementTypeHolder class="org.jetbrains.r.parsing.RElementTypes"/>

        <lang.commenter language="R" implementationClass="org.jetbrains.r.editor.RCommenter"/>
        <lang.commenter language="Roxygen" implementationClass="org.jetbrains.r.roxygen.usage.RoxygenCommenter"/>
        <enterHandlerDelegate implementation="org.jetbrains.r.editor.REnterAdapter"/>
        <enterHandlerDelegate implementation="org.jetbrains.r.roxygen.RoxygenEnterInLineCommentHandler"/>
        <enterHandlerDelegate implementation="org.jetbrains.r.roxygen.RoxygenEnterDelegateToHostHandler" order="last"/>
        <backspaceHandlerDelegate implementation="org.jetbrains.r.editor.RBackspaceHandler"/>

        <lang.elementManipulator forClass="org.jetbrains.r.psi.api.RStringLiteralExpression"
                                 implementationClass="org.jetbrains.r.psi.RStringManipulator"/>
        <lang.findUsagesProvider implementationClass="org.jetbrains.r.psi.references.RFindUsagesProvider" language="R"/>
        <lang.findUsagesProvider implementationClass="org.jetbrains.r.roxygen.usage.RoxygenFindUsagesProvider" language="Roxygen"/>
        <usageTypeProvider implementation="org.jetbrains.r.roxygen.usage.RoxygenUsageTypeProvider"/>
        <targetElementEvaluator language="R" implementationClass="org.jetbrains.r.codeInsight.findUsages.RTargetElementEvaluator"/>

        <completion.contributor language="R" implementationClass="org.jetbrains.r.editor.RCompletionContributor"/>
        <completion.contributor language="Roxygen" implementationClass="org.jetbrains.r.roxygen.RoxygenCompletionContributor"/>
        <completion.contributor language="Markdown" implementationClass="org.jetbrains.r.editor.RMarkdownCompletionContributor"/>
        <typedHandler implementation="org.jetbrains.r.console.RConsoleAutopopupBlockingHandler" id="rBlockAutoPopup"
                      order="first, before completionAutoPopup"/>

        <extendWordSelectionHandler implementation="org.jetbrains.r.editor.RExtendWordSelectionHandler"/>
        <basicWordSelectionFilter implementation="org.jetbrains.r.editor.RExtendWordSelectionHandler$RBasicFilter"/>

        <breadcrumbsInfoProvider implementation="org.jetbrains.r.breadcrumbs.RBreadcrumbsProvider"/>

        <fileBreadcrumbsCollector implementation="org.jetbrains.r.breadcrumbs.RFileBreadcrumbsCollector" order="first"/>

        <controlFlowProvider implementation="org.jetbrains.r.psi.cfg.RControlFlowProvider"/>

        <psi.referenceContributor language="R" implementation="org.jetbrains.r.psi.references.RReferenceContributor"/>

        <typedHandler implementation="org.jetbrains.r.editor.RCompletionAutoPopupHandler" order="first, before completionAutoPopup"/>
        <typedHandler implementation="org.jetbrains.r.roxygen.RoxygenTypedHandler"/>
        <lookup.charFilter implementation="org.jetbrains.r.editor.RCharFilter" order="first"/>
        <!--<targetElementEvaluator language="R" implementationClass="org.jetbrains.r.editor.RTargetElementEvaluator"/>-->
        <editorSmartKeysConfigurable instance="org.jetbrains.r.editor.RSmartKeys"
                                     id="editor.preferences.rOptions"
                                     displayName="R"/>

        <filetype.stubBuilder filetype="RPluginSkeletonFile" implementationClass="org.jetbrains.r.skeleton.RSkeletonFileStubBuilder"/>
        <fileType.fileViewProviderFactory filetype="RPluginSkeletonFile" implementationClass="org.jetbrains.r.skeleton.RSkeletonViewProviderFactory"/>
        <stubElementTypeHolder class="org.jetbrains.r.skeleton.psi.RSkeletonElementTypes"/>
        <fileType extensions="RPluginSkeletonFile" name="RPluginSkeletonFile" fieldName="INSTANCE" implementationClass="org.jetbrains.r.skeleton.RSkeletonFileType"/>

        <codeInsight.parameterInfo language="R" implementationClass="org.jetbrains.r.hints.parameterInfo.RParameterInfoHandler"/>
        <codeInsight.parameterNameHints language="R" implementationClass="org.jetbrains.r.hints.parameterInfo.RInlayParameterHintsProvider"/>
        <codeInsight.inlayProvider language="R" implementationClass="org.jetbrains.r.hints.RReturnHintInlayProvider"/>
        <highlightingPassFactory implementation="org.jetbrains.r.hints.parameterInfo.RMarkdownParameterHintsPassFactory"/>
        <editorFactoryListener implementation="org.jetbrains.r.console.RConsoleEditorFactoryListener"/>
        <editorFactoryListener implementation="org.jetbrains.r.settings.RUpdateComponent"/>
        <editorFactoryListener implementation="org.jetbrains.r.hints.RReturnHintEditorFactoryListener"/>
        <editorFactoryListener implementation="org.jetbrains.r.rendering.editor.RMarkdownEditorFactoryListener"
                               order="before org.intellij.datavis.r.inlays.InlaysManager"/>
        <highlightingPassFactory implementation="org.jetbrains.r.hints.RReturnHintPass$Factory"/>

        <!-- Settings -->
        <projectConfigurable groupId="project"
                             id="org.jetbrains.r.configuration.RSettingsProjectConfigurable"
                             displayName="R Settings"
                             instance="org.jetbrains.r.configuration.RSettingsProjectConfigurable"/>

        <applicationService serviceImplementation="org.jetbrains.r.settings.RInterpreterSettings"/>

        <applicationService serviceImplementation="org.jetbrains.r.settings.REditorSettings"/>

        <applicationService serviceImplementation="org.jetbrains.r.packages.remote.RPackageDescriptionCache"/>

        <projectService serviceInterface="org.jetbrains.r.interpreter.RInterpreterManager"
                        serviceImplementation="org.jetbrains.r.interpreter.RInterpreterManagerImpl"/>

        <projectService serviceInterface="org.jetbrains.r.interpreter.RInterpreterStateManager"
                        serviceImplementation="org.jetbrains.r.interpreter.RInterpreterStateManagerImpl"/>

        <projectService serviceImplementation="org.jetbrains.r.settings.RGraphicsSettings"/>

        <projectService serviceImplementation="org.jetbrains.r.settings.REditorSettings"/>

        <projectService serviceImplementation="org.jetbrains.r.settings.RSettings"/>

        <projectService serviceImplementation="org.jetbrains.r.packages.RPackageService"/>
      
        <projectService serviceImplementation="org.jetbrains.r.hints.RReturnHintsModel"/>
      
        <projectService serviceImplementation="org.jetbrains.r.hints.RReturnHintPass$FactoryService"/>

        <projectService serviceImplementation="org.jetbrains.r.settings.RPackageBuildSettings"/>

        <projectService serviceImplementation="org.jetbrains.r.settings.RMarkdownGraphicsSettings"/>
        
        <projectService serviceImplementation="org.jetbrains.r.packages.remote.RAvailablePackageCache"/>

        <projectService serviceImplementation="org.jetbrains.r.run.graphics.RGraphicsRepository"/>

        <projectService serviceImplementation="org.jetbrains.r.interpreter.RLibraryWatcher"/>

        <projectService serviceImplementation="org.jetbrains.r.console.RConsoleManager"/>

        <projectService serviceImplementation="org.jetbrains.r.rendering.settings.RMarkdownSettings"/>

        <projectService serviceImplementation="org.jetbrains.r.packages.RequiredPackageInstaller"/>

        <projectService serviceImplementation="org.jetbrains.r.packages.RPackageProjectManager"/>

        <projectService serviceInterface="org.jetbrains.r.packages.remote.RepoProvider"
                        serviceImplementation="org.jetbrains.r.packages.remote.RBasicRepoProvider"/>

        <projectService serviceImplementation="org.jetbrains.r.editor.WelcomeGuideManager" preload="notLightEdit"/>

        <xdebugger.breakpointType implementation="org.jetbrains.r.run.debug.RLineBreakpointType"/>

        <xdebugger.debuggerSupport implementation="org.jetbrains.r.console.RDebuggerSupport" order="first,before XDebuggerSupport"/>

        <editorNotificationProvider implementation="org.jetbrains.r.console.RSourceChangedEditorNotificationProvider"/>

        <!--- RMarkdown ui-->
        <fileEditorProvider implementation="org.jetbrains.r.rendering.editor.RMarkdownFileEditorProvider"/>

        <!-- tool windows-->
        <lang.psiStructureViewFactory language="R"
                                      implementationClass="org.jetbrains.r.psi.RScriptStructureViewFactory"/>

        <toolWindow id="R Jobs" anchor="bottom" canCloseContents="false" icon="/icons/toolWindow/RConsole.svg"
                    factoryClass="org.jetbrains.r.console.jobs.RJobsToolWindowFactory" secondary="false"
                    order="after R Console"/>

        <toolWindow id="R Console" anchor="bottom" canCloseContents="true" icon="/icons/toolWindow/RConsole.svg"
                    factoryClass="org.jetbrains.r.console.RConsoleToolWindowFactory" secondary="false"/>


        <toolWindow id="R Tools" anchor="right" canCloseContents="false" icon="/icons/toolWindow/RConsole.svg"
                    factoryClass="org.jetbrains.r.rendering.toolwindow.RToolWindowFactory" secondary="false"/>


        <lang.psiStructureViewFactory language="RMarkdown"
                                      implementationClass="org.jetbrains.r.rmarkdown.structureView.RMarkdownStructureViewFactory"/>



        <!-- refactorings -->
        <lang.refactoringSupport language="R" implementationClass="org.jetbrains.r.refactoring.RRefactoringProvider"/>
        <lang.refactoringSupport language="Roxygen" implementationClass="org.jetbrains.r.roxygen.RoxygenRefactoringProvider"/>
        <renameInputValidator implementation="org.jetbrains.r.refactoring.rename.RRenameInputValidator"/>
        <nameSuggestionProvider implementation="org.jetbrains.r.refactoring.rename.RNameSuggestionProvider"/>
        <renameHandler implementation="org.jetbrains.r.refactoring.rename.RMemberInplaceRenameHandler"/>
        <renameHandler implementation="org.jetbrains.r.refactoring.rename.RVariableInplaceRenameHandler"/>
        <renamePsiElementProcessor implementation="org.jetbrains.r.refactoring.rename.RenameRPsiElementProcessor"
                                 id="RPsiElement"
                                 order="first"/>

        <!--see /Users/brandl/projects/jb/intellij-community/plugins/groovy/src/META-INF/rplugin-common.xml:448-->
        <vetoRenameCondition implementation="org.jetbrains.r.psi.references.RenamingVetoCondition"/>
        <inlineActionHandler implementation="org.jetbrains.r.refactoring.inline.RInlineAssignmentHandler"/>

        <!-- coding assistance-->
        <liveTemplateContext implementation="org.jetbrains.r.editor.RContextType"/>
        <defaultLiveTemplates file="liveTemplates/rtemplates.xml"/>
        <internalFileTemplate name="R Script"/>
        <internalFileTemplate name="RMarkdown"/>

        <scratch.rootType implementation="org.jetbrains.r.console.RConsoleRootType"/>


        <!-- Editor notification providers -->
        <editorNotificationProvider implementation="org.jetbrains.r.notifications.RDataImportNotificationProvider"/>


        <!-- Inspections -->

        <!-- note: display names not needed if defined in impl-->
        <!--https://intellij-support.jetbrains.com/hc/en-us/community/posts/115000074350-Why-are-default-xml-plugin-settings-preferred-over-code-based-component-configuration- -->
        <localInspection shortName="RUnusedParameter" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.unusedParameter.name"
                         implementationClass="org.jetbrains.r.inspections.UnusedParameterInspection"/>

        <localInspection shortName="RUnusedVariable" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.unusedVariable.name"
                         implementationClass="org.jetbrains.r.inspections.UnusedVariableInspection"/>

        <localInspection shortName="RUnresolvedReference" language="R" enabledByDefault="true" groupName="R"
                         level="WARNING"
                         bundle="messages.RPluginBundle" key="inspection.unresolvedReference.name"
                         implementationClass="org.jetbrains.r.inspections.UnresolvedReferenceInspection"/>

        <localInspection shortName="RMarkdownRequirements" language="R" enabledByDefault="true" groupName="R"
                         level="WARNING"
                         bundle="messages.RPluginBundle" key="inspection.markdownRequirements.name"
                         implementationClass="org.jetbrains.r.inspections.MarkdownRequirementsInspection"/>

        <localInspection shortName="RMissingPackage" language="R" enabledByDefault="true" groupName="R" level="ERROR"
                         bundle="messages.RPluginBundle" key="inspection.missingPackage.name"
                         implementationClass="org.jetbrains.r.inspections.MissingPackageInspection"/>

        <localInspection shortName="RBooleanExpressionSimplifier" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.simplifyBooleanExpression.name"
                         implementationClass="org.jetbrains.r.inspections.BooleanExpressionSimplifier"/>

        <localInspection shortName="RCompareToNaInspection" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.compareToNa.name"
                         implementationClass="org.jetbrains.r.inspections.CompareToNaInspection"/>

        <localInspection shortName="RPasteToPaste0Inspection" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.paste2paste0.name"
                         implementationClass="org.jetbrains.r.inspections.PasteToPaste0Inspection"/>

        <localInspection shortName="RDplyrBooleanOperatorInspection" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.dplyrBooleanOperator.name"
                         implementationClass="org.jetbrains.r.inspections.dplyr.DplyrBooleanOperatorsInspection"/>

        <localInspection shortName="RDplyrCallToPipeInspection" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.dplyrCallToPipe.name"
                         implementationClass="org.jetbrains.r.inspections.dplyr.DplyrCallToPipeInspection"/>

        <localInspection shortName="RAssignmentInspection" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.assignment.name"
                         implementationClass="org.jetbrains.r.inspections.AssignmentInspection"/>

        <localInspection shortName="RRedundantConcatenationInspection" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.redundant.concatenation.name"
                         implementationClass="org.jetbrains.r.inspections.RedundantConcatenationInspection"/>

        <localInspection shortName="RRedundantSemicolonInspection" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.redundant.semicolon.name"
                         implementationClass="org.jetbrains.r.inspections.RedundantSemicolonInspection"/>

        <localInspection shortName="RUnsafeSequenceInspection" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.unsafe.sequence.name"
                         implementationClass="org.jetbrains.r.inspections.UnsafeSequenceInspection"/>

        <localInspection shortName="RClosureAssignmentInspection" language="R" enabledByDefault="false" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.closure.assignment.name"
                         implementationClass="org.jetbrains.r.inspections.ClosureAssignmentInspection"/>

        <localInspection shortName="RTripleColonToDoubleColonInspection" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.triple.colon.to.double.colon.name"
                         implementationClass="org.jetbrains.r.inspections.TripleColonToDoubleColonInspection"/>

        <localInspection shortName="RNamingConventionInspection" language="R" enabledByDefault="false" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.naming.convention.name"
                         implementationClass="org.jetbrains.r.inspections.NamingConventionInspection"/>

      <localInspection shortName="RDeprecatedDoubleStarts" language="R" enabledByDefault="true" groupName="R"
                       bundle="messages.RPluginBundle" key="inspection.deprecated.double.starts.name"
                       implementationClass="org.jetbrains.r.inspections.DeprecatedDoubleStarts"/>

        <localInspection shortName="RDeprecatedSetClassArgsInspection" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.deprecated.setClass.args.name"
                         implementationClass="org.jetbrains.r.inspections.s4class.DeprecatedSetClassArgsInspection"/>

        <localInspection shortName="RInstanceOfVirtualS4ClassInspection" language="R" enabledByDefault="true" groupName="R"
                         bundle="messages.RPluginBundle" key="inspection.virtual.s4class.instance.name"
                         implementationClass="org.jetbrains.r.inspections.s4class.InstanceOfVirtualS4ClassInspection"/>

        <intentionAction>
            <category>R</category>
            <className>org.jetbrains.r.intentions.TtoTrueIntention</className>
        </intentionAction>

        <!-- Documentation -->
        <documentationProvider implementation="org.jetbrains.r.documentation.RDocumentationProvider"/>
        <lang.documentationToolWindowManager language="R"
                                             implementationClass="org.jetbrains.r.documentation.RDocToolWindowManager"/>
        <textEditorCustomizer implementation="org.jetbrains.r.documentation.RTextEditorCustomizer"/>

        <editorHighlighterProvider filetype="RMarkdown" implementationClass="org.jetbrains.r.rmarkdown.RMarkdownEditorHighlighterProvider"/>

        <!-- Project generators -->
        <moduleType id="R_MODULE" implementationClass="org.jetbrains.r.projectGenerator.builder.RModuleType"/>
        <projectTemplatesFactory implementation="org.jetbrains.r.projectGenerator.template.RTemplatesFactory" />

        <directoryProjectGenerator implementation="org.jetbrains.r.projectGenerator.template.REmptyProjectGenerator"/>
        <directoryProjectGenerator implementation="org.jetbrains.r.projectGenerator.template.RPackageProjectGenerator"/>

        <datavis.inlays.inlayDescriptorProvider implementation="org.jetbrains.r.rendering.chunk.ChunkDescriptorProvider"/>
        <datavis.r.inlays.components.graphicsManagerProvider implementation="org.jetbrains.r.rendering.chunk.ChunkGraphicsManagerProvider"/>
        <datavis.inlays.components.inlayOutputProvider implementation="org.jetbrains.r.rendering.chunk.ChunkInlayOutputProvider"/>

        <!-- R help providers -->
        <webHelpProvider implementation="org.jetbrains.r.help.RWebHelpProvider"/>

        <virtualFileSystem implementationClass="org.jetbrains.r.rinterop.RSourceFileManager$MyVirtualFileSystem"
                           key="rwrapper" physical="false"/>
        <!-- Diagnostics -->
        <errorHandler implementation="org.jetbrains.r.diagnostic.RExceptionAnalyzerReporter"/>

        <!-- Registry keys -->
        <registryKey defaultValue="120000" key="r.interpreter.defaultTimeout" description="Default timeout for R interpreter operations"/>
        <registryKey defaultValue="30000" key="r.interpreter.initializedTimeout" description="Timeout for initializing Rwrapper"/>
        <registryKey defaultValue="true" key="r.interpreter.useOutputInlays" description="Use new implementation for output inlays"/>

        <!-- Interpreter -->
        <rInterpreterSettingsProvider implementation="org.jetbrains.r.settings.RLocalInterpreterSettingsProvider"/>

        <!-- S4 contexts-->
        <rS4ContextProvider implementation="org.jetbrains.r.classes.s4.context.RS4NewObjectContextProvider"/>
        <rS4ContextProvider implementation="org.jetbrains.r.classes.s4.context.RS4SetClassContextProvider"/>

      <notificationGroup id="RDataFrameViewer" displayType="BALLOON"/>
      <notificationGroup id="RMarkdownRenderError" displayType="BALLOON"/>
      <notificationGroup id="RMarkdownRunChunkStatus" displayType="BALLOON"/>

      <iconProvider implementation="org.jetbrains.r.icons.RProjectIconProvider" order="first"/>

      <!-- Run configuration -->
      <configurationType implementation="org.jetbrains.r.run.configuration.RRunConfigurationType"/>
      <runConfigurationProducer implementation="org.jetbrains.r.run.configuration.RRunConfigurationProducer"/>
      <programRunner implementation="org.jetbrains.r.run.configuration.RProgramRunner"/>
    </extensions>

  <extensions defaultExtensionNs="org.intellij.intelliLang">
    <injectionConfig config="injections/rInjections.xml"/>
    <languageSupport implementation="org.jetbrains.r.injections.RInjectionSupport"/>
  </extensions>

  <extensionPoints>
    <extensionPoint qualifiedName="org.jetbrains.r.librarySupportProvider"
                    interface="org.jetbrains.r.codeInsight.libraries.RLibrarySupportProvider" dynamic="true"/>
    <extensionPoint qualifiedName="org.jetbrains.r.tableContextProvider"
                    interface="org.jetbrains.r.codeInsight.table.RTableContextManager" dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="org.jetbrains.r">
    <librarySupportProvider implementation="org.jetbrains.r.codeInsight.libraries.RShinySupportProvider"/>
    <librarySupportProvider implementation="org.jetbrains.r.codeInsight.libraries.RDataTableSupportProvider"/>
    <librarySupportProvider implementation="org.jetbrains.r.codeInsight.libraries.Ggplot2SupportProvider"/>
    <tableContextProvider implementation="org.jetbrains.r.codeInsight.table.RDplyrTableContextManager"/>
    <tableContextProvider implementation="org.jetbrains.r.codeInsight.table.RDataTableContextManager"/>
    <tableContextProvider implementation="org.jetbrains.r.codeInsight.table.RGgplotTableContextManager"/>
  </extensions>
</idea-plugin>