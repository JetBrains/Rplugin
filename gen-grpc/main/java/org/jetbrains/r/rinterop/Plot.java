// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.jetbrains.r.rinterop;

/**
 * Protobuf type {@code rplugininterop.Plot}
 */
public final class Plot extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:rplugininterop.Plot)
    PlotOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Plot.newBuilder() to construct.
  private Plot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Plot() {
    font_ = java.util.Collections.emptyList();
    color_ = emptyIntList();
    stroke_ = java.util.Collections.emptyList();
    viewport_ = java.util.Collections.emptyList();
    layer_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Plot();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Plot(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              font_ = new java.util.ArrayList<org.jetbrains.r.rinterop.Font>();
              mutable_bitField0_ |= 0x00000001;
            }
            font_.add(
                input.readMessage(org.jetbrains.r.rinterop.Font.parser(), extensionRegistry));
            break;
          }
          case 16: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              color_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            color_.addInt(input.readInt32());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              color_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              color_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              stroke_ = new java.util.ArrayList<org.jetbrains.r.rinterop.Stroke>();
              mutable_bitField0_ |= 0x00000004;
            }
            stroke_.add(
                input.readMessage(org.jetbrains.r.rinterop.Stroke.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              viewport_ = new java.util.ArrayList<org.jetbrains.r.rinterop.Viewport>();
              mutable_bitField0_ |= 0x00000008;
            }
            viewport_.add(
                input.readMessage(org.jetbrains.r.rinterop.Viewport.parser(), extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              layer_ = new java.util.ArrayList<org.jetbrains.r.rinterop.Layer>();
              mutable_bitField0_ |= 0x00000010;
            }
            layer_.add(
                input.readMessage(org.jetbrains.r.rinterop.Layer.parser(), extensionRegistry));
            break;
          }
          case 48: {

            previewComplexity_ = input.readInt32();
            break;
          }
          case 56: {

            totalComplexity_ = input.readInt32();
            break;
          }
          case 64: {

            error_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        font_ = java.util.Collections.unmodifiableList(font_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        color_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        stroke_ = java.util.Collections.unmodifiableList(stroke_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        viewport_ = java.util.Collections.unmodifiableList(viewport_);
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        layer_ = java.util.Collections.unmodifiableList(layer_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.jetbrains.r.rinterop.Service.internal_static_rplugininterop_Plot_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.jetbrains.r.rinterop.Service.internal_static_rplugininterop_Plot_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.jetbrains.r.rinterop.Plot.class, org.jetbrains.r.rinterop.Plot.Builder.class);
  }

  public static final int FONT_FIELD_NUMBER = 1;
  private java.util.List<org.jetbrains.r.rinterop.Font> font_;
  /**
   * <code>repeated .rplugininterop.Font font = 1;</code>
   */
  @java.lang.Override
  public java.util.List<org.jetbrains.r.rinterop.Font> getFontList() {
    return font_;
  }
  /**
   * <code>repeated .rplugininterop.Font font = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.jetbrains.r.rinterop.FontOrBuilder> 
      getFontOrBuilderList() {
    return font_;
  }
  /**
   * <code>repeated .rplugininterop.Font font = 1;</code>
   */
  @java.lang.Override
  public int getFontCount() {
    return font_.size();
  }
  /**
   * <code>repeated .rplugininterop.Font font = 1;</code>
   */
  @java.lang.Override
  public org.jetbrains.r.rinterop.Font getFont(int index) {
    return font_.get(index);
  }
  /**
   * <code>repeated .rplugininterop.Font font = 1;</code>
   */
  @java.lang.Override
  public org.jetbrains.r.rinterop.FontOrBuilder getFontOrBuilder(
      int index) {
    return font_.get(index);
  }

  public static final int COLOR_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.IntList color_;
  /**
   * <code>repeated int32 color = 2;</code>
   * @return A list containing the color.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getColorList() {
    return color_;
  }
  /**
   * <code>repeated int32 color = 2;</code>
   * @return The count of color.
   */
  public int getColorCount() {
    return color_.size();
  }
  /**
   * <code>repeated int32 color = 2;</code>
   * @param index The index of the element to return.
   * @return The color at the given index.
   */
  public int getColor(int index) {
    return color_.getInt(index);
  }
  private int colorMemoizedSerializedSize = -1;

  public static final int STROKE_FIELD_NUMBER = 3;
  private java.util.List<org.jetbrains.r.rinterop.Stroke> stroke_;
  /**
   * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.jetbrains.r.rinterop.Stroke> getStrokeList() {
    return stroke_;
  }
  /**
   * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.jetbrains.r.rinterop.StrokeOrBuilder> 
      getStrokeOrBuilderList() {
    return stroke_;
  }
  /**
   * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
   */
  @java.lang.Override
  public int getStrokeCount() {
    return stroke_.size();
  }
  /**
   * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
   */
  @java.lang.Override
  public org.jetbrains.r.rinterop.Stroke getStroke(int index) {
    return stroke_.get(index);
  }
  /**
   * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
   */
  @java.lang.Override
  public org.jetbrains.r.rinterop.StrokeOrBuilder getStrokeOrBuilder(
      int index) {
    return stroke_.get(index);
  }

  public static final int VIEWPORT_FIELD_NUMBER = 4;
  private java.util.List<org.jetbrains.r.rinterop.Viewport> viewport_;
  /**
   * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
   */
  @java.lang.Override
  public java.util.List<org.jetbrains.r.rinterop.Viewport> getViewportList() {
    return viewport_;
  }
  /**
   * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.jetbrains.r.rinterop.ViewportOrBuilder> 
      getViewportOrBuilderList() {
    return viewport_;
  }
  /**
   * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
   */
  @java.lang.Override
  public int getViewportCount() {
    return viewport_.size();
  }
  /**
   * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
   */
  @java.lang.Override
  public org.jetbrains.r.rinterop.Viewport getViewport(int index) {
    return viewport_.get(index);
  }
  /**
   * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
   */
  @java.lang.Override
  public org.jetbrains.r.rinterop.ViewportOrBuilder getViewportOrBuilder(
      int index) {
    return viewport_.get(index);
  }

  public static final int LAYER_FIELD_NUMBER = 5;
  private java.util.List<org.jetbrains.r.rinterop.Layer> layer_;
  /**
   * <code>repeated .rplugininterop.Layer layer = 5;</code>
   */
  @java.lang.Override
  public java.util.List<org.jetbrains.r.rinterop.Layer> getLayerList() {
    return layer_;
  }
  /**
   * <code>repeated .rplugininterop.Layer layer = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.jetbrains.r.rinterop.LayerOrBuilder> 
      getLayerOrBuilderList() {
    return layer_;
  }
  /**
   * <code>repeated .rplugininterop.Layer layer = 5;</code>
   */
  @java.lang.Override
  public int getLayerCount() {
    return layer_.size();
  }
  /**
   * <code>repeated .rplugininterop.Layer layer = 5;</code>
   */
  @java.lang.Override
  public org.jetbrains.r.rinterop.Layer getLayer(int index) {
    return layer_.get(index);
  }
  /**
   * <code>repeated .rplugininterop.Layer layer = 5;</code>
   */
  @java.lang.Override
  public org.jetbrains.r.rinterop.LayerOrBuilder getLayerOrBuilder(
      int index) {
    return layer_.get(index);
  }

  public static final int PREVIEWCOMPLEXITY_FIELD_NUMBER = 6;
  private int previewComplexity_;
  /**
   * <code>int32 previewComplexity = 6;</code>
   * @return The previewComplexity.
   */
  @java.lang.Override
  public int getPreviewComplexity() {
    return previewComplexity_;
  }

  public static final int TOTALCOMPLEXITY_FIELD_NUMBER = 7;
  private int totalComplexity_;
  /**
   * <code>int32 totalComplexity = 7;</code>
   * @return The totalComplexity.
   */
  @java.lang.Override
  public int getTotalComplexity() {
    return totalComplexity_;
  }

  public static final int ERROR_FIELD_NUMBER = 8;
  private int error_;
  /**
   * <code>int32 error = 8;</code>
   * @return The error.
   */
  @java.lang.Override
  public int getError() {
    return error_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    for (int i = 0; i < font_.size(); i++) {
      output.writeMessage(1, font_.get(i));
    }
    if (getColorList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(colorMemoizedSerializedSize);
    }
    for (int i = 0; i < color_.size(); i++) {
      output.writeInt32NoTag(color_.getInt(i));
    }
    for (int i = 0; i < stroke_.size(); i++) {
      output.writeMessage(3, stroke_.get(i));
    }
    for (int i = 0; i < viewport_.size(); i++) {
      output.writeMessage(4, viewport_.get(i));
    }
    for (int i = 0; i < layer_.size(); i++) {
      output.writeMessage(5, layer_.get(i));
    }
    if (previewComplexity_ != 0) {
      output.writeInt32(6, previewComplexity_);
    }
    if (totalComplexity_ != 0) {
      output.writeInt32(7, totalComplexity_);
    }
    if (error_ != 0) {
      output.writeInt32(8, error_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < font_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, font_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < color_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(color_.getInt(i));
      }
      size += dataSize;
      if (!getColorList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      colorMemoizedSerializedSize = dataSize;
    }
    for (int i = 0; i < stroke_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, stroke_.get(i));
    }
    for (int i = 0; i < viewport_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, viewport_.get(i));
    }
    for (int i = 0; i < layer_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, layer_.get(i));
    }
    if (previewComplexity_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, previewComplexity_);
    }
    if (totalComplexity_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, totalComplexity_);
    }
    if (error_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, error_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.jetbrains.r.rinterop.Plot)) {
      return super.equals(obj);
    }
    org.jetbrains.r.rinterop.Plot other = (org.jetbrains.r.rinterop.Plot) obj;

    if (!getFontList()
        .equals(other.getFontList())) return false;
    if (!getColorList()
        .equals(other.getColorList())) return false;
    if (!getStrokeList()
        .equals(other.getStrokeList())) return false;
    if (!getViewportList()
        .equals(other.getViewportList())) return false;
    if (!getLayerList()
        .equals(other.getLayerList())) return false;
    if (getPreviewComplexity()
        != other.getPreviewComplexity()) return false;
    if (getTotalComplexity()
        != other.getTotalComplexity()) return false;
    if (getError()
        != other.getError()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFontCount() > 0) {
      hash = (37 * hash) + FONT_FIELD_NUMBER;
      hash = (53 * hash) + getFontList().hashCode();
    }
    if (getColorCount() > 0) {
      hash = (37 * hash) + COLOR_FIELD_NUMBER;
      hash = (53 * hash) + getColorList().hashCode();
    }
    if (getStrokeCount() > 0) {
      hash = (37 * hash) + STROKE_FIELD_NUMBER;
      hash = (53 * hash) + getStrokeList().hashCode();
    }
    if (getViewportCount() > 0) {
      hash = (37 * hash) + VIEWPORT_FIELD_NUMBER;
      hash = (53 * hash) + getViewportList().hashCode();
    }
    if (getLayerCount() > 0) {
      hash = (37 * hash) + LAYER_FIELD_NUMBER;
      hash = (53 * hash) + getLayerList().hashCode();
    }
    hash = (37 * hash) + PREVIEWCOMPLEXITY_FIELD_NUMBER;
    hash = (53 * hash) + getPreviewComplexity();
    hash = (37 * hash) + TOTALCOMPLEXITY_FIELD_NUMBER;
    hash = (53 * hash) + getTotalComplexity();
    hash = (37 * hash) + ERROR_FIELD_NUMBER;
    hash = (53 * hash) + getError();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.jetbrains.r.rinterop.Plot parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.r.rinterop.Plot parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.r.rinterop.Plot parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.r.rinterop.Plot parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.r.rinterop.Plot parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.r.rinterop.Plot parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.r.rinterop.Plot parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.jetbrains.r.rinterop.Plot parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.jetbrains.r.rinterop.Plot parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.jetbrains.r.rinterop.Plot parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.jetbrains.r.rinterop.Plot parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.jetbrains.r.rinterop.Plot parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.jetbrains.r.rinterop.Plot prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code rplugininterop.Plot}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:rplugininterop.Plot)
      org.jetbrains.r.rinterop.PlotOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.r.rinterop.Service.internal_static_rplugininterop_Plot_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.r.rinterop.Service.internal_static_rplugininterop_Plot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.r.rinterop.Plot.class, org.jetbrains.r.rinterop.Plot.Builder.class);
    }

    // Construct using org.jetbrains.r.rinterop.Plot.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFontFieldBuilder();
        getStrokeFieldBuilder();
        getViewportFieldBuilder();
        getLayerFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (fontBuilder_ == null) {
        font_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        fontBuilder_.clear();
      }
      color_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      if (strokeBuilder_ == null) {
        stroke_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        strokeBuilder_.clear();
      }
      if (viewportBuilder_ == null) {
        viewport_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        viewportBuilder_.clear();
      }
      if (layerBuilder_ == null) {
        layer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        layerBuilder_.clear();
      }
      previewComplexity_ = 0;

      totalComplexity_ = 0;

      error_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.jetbrains.r.rinterop.Service.internal_static_rplugininterop_Plot_descriptor;
    }

    @java.lang.Override
    public org.jetbrains.r.rinterop.Plot getDefaultInstanceForType() {
      return org.jetbrains.r.rinterop.Plot.getDefaultInstance();
    }

    @java.lang.Override
    public org.jetbrains.r.rinterop.Plot build() {
      org.jetbrains.r.rinterop.Plot result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.jetbrains.r.rinterop.Plot buildPartial() {
      org.jetbrains.r.rinterop.Plot result = new org.jetbrains.r.rinterop.Plot(this);
      int from_bitField0_ = bitField0_;
      if (fontBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          font_ = java.util.Collections.unmodifiableList(font_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.font_ = font_;
      } else {
        result.font_ = fontBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        color_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.color_ = color_;
      if (strokeBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          stroke_ = java.util.Collections.unmodifiableList(stroke_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.stroke_ = stroke_;
      } else {
        result.stroke_ = strokeBuilder_.build();
      }
      if (viewportBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          viewport_ = java.util.Collections.unmodifiableList(viewport_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.viewport_ = viewport_;
      } else {
        result.viewport_ = viewportBuilder_.build();
      }
      if (layerBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          layer_ = java.util.Collections.unmodifiableList(layer_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.layer_ = layer_;
      } else {
        result.layer_ = layerBuilder_.build();
      }
      result.previewComplexity_ = previewComplexity_;
      result.totalComplexity_ = totalComplexity_;
      result.error_ = error_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.jetbrains.r.rinterop.Plot) {
        return mergeFrom((org.jetbrains.r.rinterop.Plot)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.jetbrains.r.rinterop.Plot other) {
      if (other == org.jetbrains.r.rinterop.Plot.getDefaultInstance()) return this;
      if (fontBuilder_ == null) {
        if (!other.font_.isEmpty()) {
          if (font_.isEmpty()) {
            font_ = other.font_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFontIsMutable();
            font_.addAll(other.font_);
          }
          onChanged();
        }
      } else {
        if (!other.font_.isEmpty()) {
          if (fontBuilder_.isEmpty()) {
            fontBuilder_.dispose();
            fontBuilder_ = null;
            font_ = other.font_;
            bitField0_ = (bitField0_ & ~0x00000001);
            fontBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFontFieldBuilder() : null;
          } else {
            fontBuilder_.addAllMessages(other.font_);
          }
        }
      }
      if (!other.color_.isEmpty()) {
        if (color_.isEmpty()) {
          color_ = other.color_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureColorIsMutable();
          color_.addAll(other.color_);
        }
        onChanged();
      }
      if (strokeBuilder_ == null) {
        if (!other.stroke_.isEmpty()) {
          if (stroke_.isEmpty()) {
            stroke_ = other.stroke_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStrokeIsMutable();
            stroke_.addAll(other.stroke_);
          }
          onChanged();
        }
      } else {
        if (!other.stroke_.isEmpty()) {
          if (strokeBuilder_.isEmpty()) {
            strokeBuilder_.dispose();
            strokeBuilder_ = null;
            stroke_ = other.stroke_;
            bitField0_ = (bitField0_ & ~0x00000004);
            strokeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStrokeFieldBuilder() : null;
          } else {
            strokeBuilder_.addAllMessages(other.stroke_);
          }
        }
      }
      if (viewportBuilder_ == null) {
        if (!other.viewport_.isEmpty()) {
          if (viewport_.isEmpty()) {
            viewport_ = other.viewport_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureViewportIsMutable();
            viewport_.addAll(other.viewport_);
          }
          onChanged();
        }
      } else {
        if (!other.viewport_.isEmpty()) {
          if (viewportBuilder_.isEmpty()) {
            viewportBuilder_.dispose();
            viewportBuilder_ = null;
            viewport_ = other.viewport_;
            bitField0_ = (bitField0_ & ~0x00000008);
            viewportBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getViewportFieldBuilder() : null;
          } else {
            viewportBuilder_.addAllMessages(other.viewport_);
          }
        }
      }
      if (layerBuilder_ == null) {
        if (!other.layer_.isEmpty()) {
          if (layer_.isEmpty()) {
            layer_ = other.layer_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureLayerIsMutable();
            layer_.addAll(other.layer_);
          }
          onChanged();
        }
      } else {
        if (!other.layer_.isEmpty()) {
          if (layerBuilder_.isEmpty()) {
            layerBuilder_.dispose();
            layerBuilder_ = null;
            layer_ = other.layer_;
            bitField0_ = (bitField0_ & ~0x00000010);
            layerBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLayerFieldBuilder() : null;
          } else {
            layerBuilder_.addAllMessages(other.layer_);
          }
        }
      }
      if (other.getPreviewComplexity() != 0) {
        setPreviewComplexity(other.getPreviewComplexity());
      }
      if (other.getTotalComplexity() != 0) {
        setTotalComplexity(other.getTotalComplexity());
      }
      if (other.getError() != 0) {
        setError(other.getError());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.jetbrains.r.rinterop.Plot parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.jetbrains.r.rinterop.Plot) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<org.jetbrains.r.rinterop.Font> font_ =
      java.util.Collections.emptyList();
    private void ensureFontIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        font_ = new java.util.ArrayList<org.jetbrains.r.rinterop.Font>(font_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.jetbrains.r.rinterop.Font, org.jetbrains.r.rinterop.Font.Builder, org.jetbrains.r.rinterop.FontOrBuilder> fontBuilder_;

    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public java.util.List<org.jetbrains.r.rinterop.Font> getFontList() {
      if (fontBuilder_ == null) {
        return java.util.Collections.unmodifiableList(font_);
      } else {
        return fontBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public int getFontCount() {
      if (fontBuilder_ == null) {
        return font_.size();
      } else {
        return fontBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public org.jetbrains.r.rinterop.Font getFont(int index) {
      if (fontBuilder_ == null) {
        return font_.get(index);
      } else {
        return fontBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public Builder setFont(
        int index, org.jetbrains.r.rinterop.Font value) {
      if (fontBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFontIsMutable();
        font_.set(index, value);
        onChanged();
      } else {
        fontBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public Builder setFont(
        int index, org.jetbrains.r.rinterop.Font.Builder builderForValue) {
      if (fontBuilder_ == null) {
        ensureFontIsMutable();
        font_.set(index, builderForValue.build());
        onChanged();
      } else {
        fontBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public Builder addFont(org.jetbrains.r.rinterop.Font value) {
      if (fontBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFontIsMutable();
        font_.add(value);
        onChanged();
      } else {
        fontBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public Builder addFont(
        int index, org.jetbrains.r.rinterop.Font value) {
      if (fontBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFontIsMutable();
        font_.add(index, value);
        onChanged();
      } else {
        fontBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public Builder addFont(
        org.jetbrains.r.rinterop.Font.Builder builderForValue) {
      if (fontBuilder_ == null) {
        ensureFontIsMutable();
        font_.add(builderForValue.build());
        onChanged();
      } else {
        fontBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public Builder addFont(
        int index, org.jetbrains.r.rinterop.Font.Builder builderForValue) {
      if (fontBuilder_ == null) {
        ensureFontIsMutable();
        font_.add(index, builderForValue.build());
        onChanged();
      } else {
        fontBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public Builder addAllFont(
        java.lang.Iterable<? extends org.jetbrains.r.rinterop.Font> values) {
      if (fontBuilder_ == null) {
        ensureFontIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, font_);
        onChanged();
      } else {
        fontBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public Builder clearFont() {
      if (fontBuilder_ == null) {
        font_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        fontBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public Builder removeFont(int index) {
      if (fontBuilder_ == null) {
        ensureFontIsMutable();
        font_.remove(index);
        onChanged();
      } else {
        fontBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public org.jetbrains.r.rinterop.Font.Builder getFontBuilder(
        int index) {
      return getFontFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public org.jetbrains.r.rinterop.FontOrBuilder getFontOrBuilder(
        int index) {
      if (fontBuilder_ == null) {
        return font_.get(index);  } else {
        return fontBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public java.util.List<? extends org.jetbrains.r.rinterop.FontOrBuilder> 
         getFontOrBuilderList() {
      if (fontBuilder_ != null) {
        return fontBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(font_);
      }
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public org.jetbrains.r.rinterop.Font.Builder addFontBuilder() {
      return getFontFieldBuilder().addBuilder(
          org.jetbrains.r.rinterop.Font.getDefaultInstance());
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public org.jetbrains.r.rinterop.Font.Builder addFontBuilder(
        int index) {
      return getFontFieldBuilder().addBuilder(
          index, org.jetbrains.r.rinterop.Font.getDefaultInstance());
    }
    /**
     * <code>repeated .rplugininterop.Font font = 1;</code>
     */
    public java.util.List<org.jetbrains.r.rinterop.Font.Builder> 
         getFontBuilderList() {
      return getFontFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.jetbrains.r.rinterop.Font, org.jetbrains.r.rinterop.Font.Builder, org.jetbrains.r.rinterop.FontOrBuilder> 
        getFontFieldBuilder() {
      if (fontBuilder_ == null) {
        fontBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.jetbrains.r.rinterop.Font, org.jetbrains.r.rinterop.Font.Builder, org.jetbrains.r.rinterop.FontOrBuilder>(
                font_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        font_ = null;
      }
      return fontBuilder_;
    }

    private com.google.protobuf.Internal.IntList color_ = emptyIntList();
    private void ensureColorIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        color_ = mutableCopy(color_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated int32 color = 2;</code>
     * @return A list containing the color.
     */
    public java.util.List<java.lang.Integer>
        getColorList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(color_) : color_;
    }
    /**
     * <code>repeated int32 color = 2;</code>
     * @return The count of color.
     */
    public int getColorCount() {
      return color_.size();
    }
    /**
     * <code>repeated int32 color = 2;</code>
     * @param index The index of the element to return.
     * @return The color at the given index.
     */
    public int getColor(int index) {
      return color_.getInt(index);
    }
    /**
     * <code>repeated int32 color = 2;</code>
     * @param index The index to set the value at.
     * @param value The color to set.
     * @return This builder for chaining.
     */
    public Builder setColor(
        int index, int value) {
      ensureColorIsMutable();
      color_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 color = 2;</code>
     * @param value The color to add.
     * @return This builder for chaining.
     */
    public Builder addColor(int value) {
      ensureColorIsMutable();
      color_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 color = 2;</code>
     * @param values The color to add.
     * @return This builder for chaining.
     */
    public Builder addAllColor(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureColorIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, color_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 color = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearColor() {
      color_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private java.util.List<org.jetbrains.r.rinterop.Stroke> stroke_ =
      java.util.Collections.emptyList();
    private void ensureStrokeIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        stroke_ = new java.util.ArrayList<org.jetbrains.r.rinterop.Stroke>(stroke_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.jetbrains.r.rinterop.Stroke, org.jetbrains.r.rinterop.Stroke.Builder, org.jetbrains.r.rinterop.StrokeOrBuilder> strokeBuilder_;

    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public java.util.List<org.jetbrains.r.rinterop.Stroke> getStrokeList() {
      if (strokeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(stroke_);
      } else {
        return strokeBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public int getStrokeCount() {
      if (strokeBuilder_ == null) {
        return stroke_.size();
      } else {
        return strokeBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public org.jetbrains.r.rinterop.Stroke getStroke(int index) {
      if (strokeBuilder_ == null) {
        return stroke_.get(index);
      } else {
        return strokeBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public Builder setStroke(
        int index, org.jetbrains.r.rinterop.Stroke value) {
      if (strokeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStrokeIsMutable();
        stroke_.set(index, value);
        onChanged();
      } else {
        strokeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public Builder setStroke(
        int index, org.jetbrains.r.rinterop.Stroke.Builder builderForValue) {
      if (strokeBuilder_ == null) {
        ensureStrokeIsMutable();
        stroke_.set(index, builderForValue.build());
        onChanged();
      } else {
        strokeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public Builder addStroke(org.jetbrains.r.rinterop.Stroke value) {
      if (strokeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStrokeIsMutable();
        stroke_.add(value);
        onChanged();
      } else {
        strokeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public Builder addStroke(
        int index, org.jetbrains.r.rinterop.Stroke value) {
      if (strokeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStrokeIsMutable();
        stroke_.add(index, value);
        onChanged();
      } else {
        strokeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public Builder addStroke(
        org.jetbrains.r.rinterop.Stroke.Builder builderForValue) {
      if (strokeBuilder_ == null) {
        ensureStrokeIsMutable();
        stroke_.add(builderForValue.build());
        onChanged();
      } else {
        strokeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public Builder addStroke(
        int index, org.jetbrains.r.rinterop.Stroke.Builder builderForValue) {
      if (strokeBuilder_ == null) {
        ensureStrokeIsMutable();
        stroke_.add(index, builderForValue.build());
        onChanged();
      } else {
        strokeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public Builder addAllStroke(
        java.lang.Iterable<? extends org.jetbrains.r.rinterop.Stroke> values) {
      if (strokeBuilder_ == null) {
        ensureStrokeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stroke_);
        onChanged();
      } else {
        strokeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public Builder clearStroke() {
      if (strokeBuilder_ == null) {
        stroke_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        strokeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public Builder removeStroke(int index) {
      if (strokeBuilder_ == null) {
        ensureStrokeIsMutable();
        stroke_.remove(index);
        onChanged();
      } else {
        strokeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public org.jetbrains.r.rinterop.Stroke.Builder getStrokeBuilder(
        int index) {
      return getStrokeFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public org.jetbrains.r.rinterop.StrokeOrBuilder getStrokeOrBuilder(
        int index) {
      if (strokeBuilder_ == null) {
        return stroke_.get(index);  } else {
        return strokeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public java.util.List<? extends org.jetbrains.r.rinterop.StrokeOrBuilder> 
         getStrokeOrBuilderList() {
      if (strokeBuilder_ != null) {
        return strokeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(stroke_);
      }
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public org.jetbrains.r.rinterop.Stroke.Builder addStrokeBuilder() {
      return getStrokeFieldBuilder().addBuilder(
          org.jetbrains.r.rinterop.Stroke.getDefaultInstance());
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public org.jetbrains.r.rinterop.Stroke.Builder addStrokeBuilder(
        int index) {
      return getStrokeFieldBuilder().addBuilder(
          index, org.jetbrains.r.rinterop.Stroke.getDefaultInstance());
    }
    /**
     * <code>repeated .rplugininterop.Stroke stroke = 3;</code>
     */
    public java.util.List<org.jetbrains.r.rinterop.Stroke.Builder> 
         getStrokeBuilderList() {
      return getStrokeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.jetbrains.r.rinterop.Stroke, org.jetbrains.r.rinterop.Stroke.Builder, org.jetbrains.r.rinterop.StrokeOrBuilder> 
        getStrokeFieldBuilder() {
      if (strokeBuilder_ == null) {
        strokeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.jetbrains.r.rinterop.Stroke, org.jetbrains.r.rinterop.Stroke.Builder, org.jetbrains.r.rinterop.StrokeOrBuilder>(
                stroke_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        stroke_ = null;
      }
      return strokeBuilder_;
    }

    private java.util.List<org.jetbrains.r.rinterop.Viewport> viewport_ =
      java.util.Collections.emptyList();
    private void ensureViewportIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        viewport_ = new java.util.ArrayList<org.jetbrains.r.rinterop.Viewport>(viewport_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.jetbrains.r.rinterop.Viewport, org.jetbrains.r.rinterop.Viewport.Builder, org.jetbrains.r.rinterop.ViewportOrBuilder> viewportBuilder_;

    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public java.util.List<org.jetbrains.r.rinterop.Viewport> getViewportList() {
      if (viewportBuilder_ == null) {
        return java.util.Collections.unmodifiableList(viewport_);
      } else {
        return viewportBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public int getViewportCount() {
      if (viewportBuilder_ == null) {
        return viewport_.size();
      } else {
        return viewportBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public org.jetbrains.r.rinterop.Viewport getViewport(int index) {
      if (viewportBuilder_ == null) {
        return viewport_.get(index);
      } else {
        return viewportBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public Builder setViewport(
        int index, org.jetbrains.r.rinterop.Viewport value) {
      if (viewportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureViewportIsMutable();
        viewport_.set(index, value);
        onChanged();
      } else {
        viewportBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public Builder setViewport(
        int index, org.jetbrains.r.rinterop.Viewport.Builder builderForValue) {
      if (viewportBuilder_ == null) {
        ensureViewportIsMutable();
        viewport_.set(index, builderForValue.build());
        onChanged();
      } else {
        viewportBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public Builder addViewport(org.jetbrains.r.rinterop.Viewport value) {
      if (viewportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureViewportIsMutable();
        viewport_.add(value);
        onChanged();
      } else {
        viewportBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public Builder addViewport(
        int index, org.jetbrains.r.rinterop.Viewport value) {
      if (viewportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureViewportIsMutable();
        viewport_.add(index, value);
        onChanged();
      } else {
        viewportBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public Builder addViewport(
        org.jetbrains.r.rinterop.Viewport.Builder builderForValue) {
      if (viewportBuilder_ == null) {
        ensureViewportIsMutable();
        viewport_.add(builderForValue.build());
        onChanged();
      } else {
        viewportBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public Builder addViewport(
        int index, org.jetbrains.r.rinterop.Viewport.Builder builderForValue) {
      if (viewportBuilder_ == null) {
        ensureViewportIsMutable();
        viewport_.add(index, builderForValue.build());
        onChanged();
      } else {
        viewportBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public Builder addAllViewport(
        java.lang.Iterable<? extends org.jetbrains.r.rinterop.Viewport> values) {
      if (viewportBuilder_ == null) {
        ensureViewportIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, viewport_);
        onChanged();
      } else {
        viewportBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public Builder clearViewport() {
      if (viewportBuilder_ == null) {
        viewport_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        viewportBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public Builder removeViewport(int index) {
      if (viewportBuilder_ == null) {
        ensureViewportIsMutable();
        viewport_.remove(index);
        onChanged();
      } else {
        viewportBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public org.jetbrains.r.rinterop.Viewport.Builder getViewportBuilder(
        int index) {
      return getViewportFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public org.jetbrains.r.rinterop.ViewportOrBuilder getViewportOrBuilder(
        int index) {
      if (viewportBuilder_ == null) {
        return viewport_.get(index);  } else {
        return viewportBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public java.util.List<? extends org.jetbrains.r.rinterop.ViewportOrBuilder> 
         getViewportOrBuilderList() {
      if (viewportBuilder_ != null) {
        return viewportBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(viewport_);
      }
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public org.jetbrains.r.rinterop.Viewport.Builder addViewportBuilder() {
      return getViewportFieldBuilder().addBuilder(
          org.jetbrains.r.rinterop.Viewport.getDefaultInstance());
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public org.jetbrains.r.rinterop.Viewport.Builder addViewportBuilder(
        int index) {
      return getViewportFieldBuilder().addBuilder(
          index, org.jetbrains.r.rinterop.Viewport.getDefaultInstance());
    }
    /**
     * <code>repeated .rplugininterop.Viewport viewport = 4;</code>
     */
    public java.util.List<org.jetbrains.r.rinterop.Viewport.Builder> 
         getViewportBuilderList() {
      return getViewportFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.jetbrains.r.rinterop.Viewport, org.jetbrains.r.rinterop.Viewport.Builder, org.jetbrains.r.rinterop.ViewportOrBuilder> 
        getViewportFieldBuilder() {
      if (viewportBuilder_ == null) {
        viewportBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.jetbrains.r.rinterop.Viewport, org.jetbrains.r.rinterop.Viewport.Builder, org.jetbrains.r.rinterop.ViewportOrBuilder>(
                viewport_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        viewport_ = null;
      }
      return viewportBuilder_;
    }

    private java.util.List<org.jetbrains.r.rinterop.Layer> layer_ =
      java.util.Collections.emptyList();
    private void ensureLayerIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        layer_ = new java.util.ArrayList<org.jetbrains.r.rinterop.Layer>(layer_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.jetbrains.r.rinterop.Layer, org.jetbrains.r.rinterop.Layer.Builder, org.jetbrains.r.rinterop.LayerOrBuilder> layerBuilder_;

    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public java.util.List<org.jetbrains.r.rinterop.Layer> getLayerList() {
      if (layerBuilder_ == null) {
        return java.util.Collections.unmodifiableList(layer_);
      } else {
        return layerBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public int getLayerCount() {
      if (layerBuilder_ == null) {
        return layer_.size();
      } else {
        return layerBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public org.jetbrains.r.rinterop.Layer getLayer(int index) {
      if (layerBuilder_ == null) {
        return layer_.get(index);
      } else {
        return layerBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public Builder setLayer(
        int index, org.jetbrains.r.rinterop.Layer value) {
      if (layerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLayerIsMutable();
        layer_.set(index, value);
        onChanged();
      } else {
        layerBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public Builder setLayer(
        int index, org.jetbrains.r.rinterop.Layer.Builder builderForValue) {
      if (layerBuilder_ == null) {
        ensureLayerIsMutable();
        layer_.set(index, builderForValue.build());
        onChanged();
      } else {
        layerBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public Builder addLayer(org.jetbrains.r.rinterop.Layer value) {
      if (layerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLayerIsMutable();
        layer_.add(value);
        onChanged();
      } else {
        layerBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public Builder addLayer(
        int index, org.jetbrains.r.rinterop.Layer value) {
      if (layerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLayerIsMutable();
        layer_.add(index, value);
        onChanged();
      } else {
        layerBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public Builder addLayer(
        org.jetbrains.r.rinterop.Layer.Builder builderForValue) {
      if (layerBuilder_ == null) {
        ensureLayerIsMutable();
        layer_.add(builderForValue.build());
        onChanged();
      } else {
        layerBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public Builder addLayer(
        int index, org.jetbrains.r.rinterop.Layer.Builder builderForValue) {
      if (layerBuilder_ == null) {
        ensureLayerIsMutable();
        layer_.add(index, builderForValue.build());
        onChanged();
      } else {
        layerBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public Builder addAllLayer(
        java.lang.Iterable<? extends org.jetbrains.r.rinterop.Layer> values) {
      if (layerBuilder_ == null) {
        ensureLayerIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, layer_);
        onChanged();
      } else {
        layerBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public Builder clearLayer() {
      if (layerBuilder_ == null) {
        layer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        layerBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public Builder removeLayer(int index) {
      if (layerBuilder_ == null) {
        ensureLayerIsMutable();
        layer_.remove(index);
        onChanged();
      } else {
        layerBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public org.jetbrains.r.rinterop.Layer.Builder getLayerBuilder(
        int index) {
      return getLayerFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public org.jetbrains.r.rinterop.LayerOrBuilder getLayerOrBuilder(
        int index) {
      if (layerBuilder_ == null) {
        return layer_.get(index);  } else {
        return layerBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public java.util.List<? extends org.jetbrains.r.rinterop.LayerOrBuilder> 
         getLayerOrBuilderList() {
      if (layerBuilder_ != null) {
        return layerBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(layer_);
      }
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public org.jetbrains.r.rinterop.Layer.Builder addLayerBuilder() {
      return getLayerFieldBuilder().addBuilder(
          org.jetbrains.r.rinterop.Layer.getDefaultInstance());
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public org.jetbrains.r.rinterop.Layer.Builder addLayerBuilder(
        int index) {
      return getLayerFieldBuilder().addBuilder(
          index, org.jetbrains.r.rinterop.Layer.getDefaultInstance());
    }
    /**
     * <code>repeated .rplugininterop.Layer layer = 5;</code>
     */
    public java.util.List<org.jetbrains.r.rinterop.Layer.Builder> 
         getLayerBuilderList() {
      return getLayerFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.jetbrains.r.rinterop.Layer, org.jetbrains.r.rinterop.Layer.Builder, org.jetbrains.r.rinterop.LayerOrBuilder> 
        getLayerFieldBuilder() {
      if (layerBuilder_ == null) {
        layerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.jetbrains.r.rinterop.Layer, org.jetbrains.r.rinterop.Layer.Builder, org.jetbrains.r.rinterop.LayerOrBuilder>(
                layer_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        layer_ = null;
      }
      return layerBuilder_;
    }

    private int previewComplexity_ ;
    /**
     * <code>int32 previewComplexity = 6;</code>
     * @return The previewComplexity.
     */
    @java.lang.Override
    public int getPreviewComplexity() {
      return previewComplexity_;
    }
    /**
     * <code>int32 previewComplexity = 6;</code>
     * @param value The previewComplexity to set.
     * @return This builder for chaining.
     */
    public Builder setPreviewComplexity(int value) {
      
      previewComplexity_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 previewComplexity = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreviewComplexity() {
      
      previewComplexity_ = 0;
      onChanged();
      return this;
    }

    private int totalComplexity_ ;
    /**
     * <code>int32 totalComplexity = 7;</code>
     * @return The totalComplexity.
     */
    @java.lang.Override
    public int getTotalComplexity() {
      return totalComplexity_;
    }
    /**
     * <code>int32 totalComplexity = 7;</code>
     * @param value The totalComplexity to set.
     * @return This builder for chaining.
     */
    public Builder setTotalComplexity(int value) {
      
      totalComplexity_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 totalComplexity = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalComplexity() {
      
      totalComplexity_ = 0;
      onChanged();
      return this;
    }

    private int error_ ;
    /**
     * <code>int32 error = 8;</code>
     * @return The error.
     */
    @java.lang.Override
    public int getError() {
      return error_;
    }
    /**
     * <code>int32 error = 8;</code>
     * @param value The error to set.
     * @return This builder for chaining.
     */
    public Builder setError(int value) {
      
      error_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 error = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearError() {
      
      error_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:rplugininterop.Plot)
  }

  // @@protoc_insertion_point(class_scope:rplugininterop.Plot)
  private static final org.jetbrains.r.rinterop.Plot DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.jetbrains.r.rinterop.Plot();
  }

  public static org.jetbrains.r.rinterop.Plot getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Plot>
      PARSER = new com.google.protobuf.AbstractParser<Plot>() {
    @java.lang.Override
    public Plot parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Plot(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Plot> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Plot> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.jetbrains.r.rinterop.Plot getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

